import { PrismaClient } from '@prisma/client'
import dotenv from 'dotenv'
import path from 'path'

// Si NODE_ENV n'est pas encore d√©fini, on force 'development' par d√©faut
const NODE_ENV = process.env.NODE_ENV ?? 'development'

// Force le chargement manuel du bon fichier .env (√©vite les mauvaises surprises)
const envFile = NODE_ENV === 'test' ? '.env.test' : '.env'
const envPath = path.resolve(process.cwd(), envFile)
dotenv.config({ path: envPath, override: true })

console.log(`üåç NODE_ENV = ${NODE_ENV}`)
console.log(`üéØ DATABASE_URL charg√©e : ${process.env.DATABASE_URL}`)

// Initialise Prisma
const prisma = new PrismaClient()

// Fonction de connexion (utile pour d√©marrer manuellement l'app)
export async function connectToDatabase() {
  try {
    await prisma.$connect()
    console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie')
  } catch (error) {
    console.error('‚ùå Erreur de connexion √† la base de donn√©es :', error)
    process.exit(1)
  }
}

export default prisma
