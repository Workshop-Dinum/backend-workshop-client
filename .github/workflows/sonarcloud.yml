name: SonarCloud

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: workshop_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Set up env
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/workshop_test" >> $GITHUB_ENV
          echo "JWT_SECRET=supersecret" >> $GITHUB_ENV
          echo "FRONTEND_URL=https://workshop-dinum-frontend-workshop-cl.vercel.app/" >> $GITHUB_ENV

      - name: Prisma migrate
        run: npx prisma migrate deploy

      - name: Prisma seed
        run: npx prisma db seed

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
